/*
Подбор картофеля.
Помогите повару сварить картофельное пюре.

Повару необходимо сварить картофельное пюре весом 1500 грамм, состоящее строго из трёх картофелин,
а так же при подаче блюда рассказать гостю о сорте выбранного картофеля.

--- Дано
Вам дан массив potatoes - картофелины, доступные к выбору.
Каждая картофелина имеет:
* weight - вес в граммах
* variety - сорт

Необходимо написать программу, которая подберёт наиболее близкое к 1500г сочетание трёх картофелин,
подсчитает отклонение и определит сорт превалирующего картофеля.

--- Отклонение
Вероятно, вы не сможете найти сочетание трёх картофелин, чтобы в сумме было ровно 1500г.
Поэтому вам необходимо найти сочетание, которое будет максимально приближено к требуемому весу.
Вы должны вывести общую сумму выбранного картофеля и получившееся отклонение (а вернее его математический модуль).
Например:
* Общий вес: 1500, Отклонение: 0
* Общий вес: 1510, Отклонение: 10
* Общий вес: 250, Отклонение: 1250
* Общий вес: 0, Отклонение: 1500
* Общий вес: 5000, Отклонение: 3500

--- Превалирующий сорт
Так как вы выбираете нечетное количество картофелин - 3 штуки, то среди них всегда будет сорт, которого больше.
Выведите тот сорт, которого больше всего взяли (в штуках).

ВАЖНО!!!
Определение превалирующего сорта определяется именно по количеству, а не весу!
Например, если взяли:
* 2000г сорта "Сорт-1"
* 100г сорта "Сорт-2"
* 500г сорта "Сорт-2"
То в таком случае превалирующим сортом является "Сорт-2", так как его взяли 2 штуки, а "Сорт-1" взяли 1 штуку.
Текущее задание не рассчитано на подсчёт веса для каждого взятого сорта, но если Вы сможете посчитать вес и
вывести именно превалирующий сорт по весу, это будет большим шагом в изучении алгоритмов!


--- Рекомендации
Задание решается с помощью трёх вложенных циклов, перебором всех возможных сочетаний картофелин и запоминанием
наиболее приближенных вариантов.

Так как мы ищем превалирующий сорт среди трёх картофелин, то достаточно будет найти тот сорт, которые среди
выбранных картофелин упоминается хотя бы 2 раза.

--- Ожидаемый вывод
После работы программа должна вывести примерно такой результат:

Общий вес: 1510
Отклонение: 10
Превалирующий сорт: Yukon Gold
Выбранный картофель: [
  { weight: 691, variety: 'Russet Burbank' },
  { weight: 538, variety: 'Yukon Gold' },
  { weight: 281, variety: 'Yukon Gold' }
]

 */

const potatoes = [
    { weight: 691, variety: 'Russet Burbank' },
    { weight: 624, variety: 'Russet Burbank' },
    { weight: 538, variety: 'Yukon Gold' },
    { weight: 428, variety: 'Russet Burbank' },
    { weight: 281, variety: 'Yukon Gold' },
];
const targetWeight = 1500;

// ... Ваш код здесь ...
const размер = potatoes.length;
const сорта = [];

let итоговаяСумма = null;
let итоговыйКартофель = [];
let итоговаяРазница = null;
let итоговыйСорт = null;


for (let позиция1 = 0; позиция1 < размер; позиция1++) {
    const картошка1 = potatoes[позиция1];
    for (let позиция2 = позиция1 + 1; позиция2 < размер; позиция2++) {

        const картошка2 = potatoes[позиция2];

        for (let позиция3 = позиция2 + 1; позиция3 < размер; позиция3++) {

            const картошка3 = potatoes[позиция3];


            const сумма = картошка1.weight + картошка2.weight + картошка3.weight;


            const разница = Math.abs(сумма - targetWeight);


            if (итоговаяРазница === null || разница < итоговаяРазница) {
                итоговаяСумма = сумма;
                итоговаяРазница = разница;
                итоговыйКартофель = [картошка1, картошка2, картошка3];
            }}}}
//............


for (let i = 0; i < итоговыйКартофель.length; i++) {

    const сорт = итоговыйКартофель[i].variety;
    if (сорта.includes(сорт)) {

        итоговыйСорт = сорт;
        break;
    }

    сорта.push(сорт);
}
console.log(
    `
Общий вес: ${итоговаяСумма}
Отклонение: ${итоговаяРазница}
Превалирующий сорт: ${итоговыйСорт}
Выбранный картофель:`, итоговыйКартофель,
);

/* ОЖИДАЕМЫЙ ВЫВОД
Общий вес: 1510
Отклонение: 10
Превалирующий сорт: Yukon Gold
Выбранный картофель: [
  { weight: 691, variety: 'Russet Burbank' },
  { weight: 538, variety: 'Yukon Gold' },
  { weight: 281, variety: 'Yukon Gold' }
]
 */
